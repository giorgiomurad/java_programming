{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh14480\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 . Abstract classes are like regular classes, but instances of abstract classes cannot be created using the 
\f1\b new
\f0\b0  operator\
\
. An abstract method is defined without implementation. It\'92s implementation is provided by the subclasses\
\
. A class that contains methods that are defined as abstract must also be defined abstract\
\
. A subclass that inherits from an abstract superclass must implement all methods that are defined abstract in the superclass\
\
. It is possible to create an abstract class that doesn\'92t contain any abstract method, but instances of this class cannot be initialized in the main\
\
. It is possible for a subclass to be abstract even if its superclass is concrete\
\
. An instance of an abstract class cannot be initialized using the 
\f1\b new
\f0\b0  operator, but can be used as a data type\
\
. An interface is a class-like construct that contains only constants and abstract methods\
\
. A class has access to the properties of an interface when the class is implements the interface using the 
\f1\b implements
\f0\b0  keyword\
\
. The relationship between class and interface is known as 
\f2\i interface inheritance
\f0\i0 \
\
. All variables of an interface must be 
\f1\b public static final
\f0\b0 \
\
. All methods in an interface must be defined 
\f1\b public abstract
\f0\b0 \
\
. It is possible for an interface to inherit from other interfaces}