{\rtf1\ansi\ansicpg1252\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh14580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 . In Java, Object-Oriented Programming (OOP) involves programming using objects\
\
. An object represents an identifiable entity (For example, a student)\
\
. A class, however, is a brief representation of the object\'92s state, properties, and behavior\
\
. Every Java class has a constructor. A constructor is a method that is used to initialize the object as well as its properties\
\
. A constructor must have the same name as the class, and does not contain a return type\
\
. When a constructor is not defined in a class. Java automatically defines an empty constructor for the class\
\
. It is possible for a class to contain more than one constructor. Each constructor with different parameters, in which it becomes easier to construct different objects with different data values\
\
. A constructor is only invoked by the 
\f1\b new
\f0\b0  operator\
\
. When an object is initialized and assigned to a variable in the main. The variable also becomes a reference to an object\
\
. When an object is constructed and assigned to a reference, the reference will be able to access and use from all public data fields and functions as defined in the class\
\
. The objects contents are accessed using the 
\f1\b .
\f0\b0  operator (reference
\f1\b .[method]
\f0\b0 )\
\
. The objects data fields, if not assigned values in the constructor, are automatically assigned to their default values before they are assigned new values. (A variable of type boolean is automatically set to 
\f1\b false
\f0\b0  at first)\
\
. There are two types of data fields: Primitive types and reference types.\
  Primitive types are variables of data fields 
\f1\b int
\f0\b0 , 
\f1\b boolean
\f0\b0 , 
\f1\b float
\f0\b0 , \'85\
  Reference types are when variables are assigned as references to objects. For example: a variable that references a 
\f1\b String
\f0\b0  object\
\
. When the value of a primitive type variable (1) is assigned to another primitive type variable (2), the content of (1) is copied and assigned to (2)\
\
. When the object referenced by a reference type variable (1) is assigned to another reference type variable (2), the two variables (1) and (2) will therefore refer to the same object\
\
. Java contains built-in classes in order for those developing in Java to benefit from the properties and functions offered by the various built-in classes\
\
. Any object property (variable or function) that is static is a property that is shared among all objects of the same identity. For example: (1) Two different students that are taking a common course, (2) Two different cats can jump high\
\
. Any static property is accessed not by the reference, but by the object\'92s class. (className
\f1\b .[property]
\f0\b0 )\
\
. 
\f1\b public
\f0\b0  is a keyword that is a modifier for classes, methods, and data fields to denote that they can be accessed from any other class\
\
. 
\f1\b private
\f0\b0 , on the other hand, modifies classes, methods, and data fields to denote that they can only be accessed from within the object\'92s class\
\
. A data field of a class may be set to 
\f1\b private
\f0\b0 , and only accessible through 
\f2\i set
\f0\i0  and 
\f2\i get
\f0\i0  methods of the class. This process is called 
\f2\i data encapsulation
\f0\i0 \
\
. 
\f2\i Data Encapsulation
\f0\i0  is considered useful because if data fields would be set to 
\f1\b public
\f0\b0 , data may be tampered, and the class becomes difficult to maintain and vulnerable to bugs\
\
. A 
\f1\b get
\f0\b0  method is referred to as the 
\f2\i getter method
\f0\i0  (or 
\f2\i accessor
\f0\i0 ), and the 
\f1\b set
\f0\b0  method is referred to as the 
\f2\i setter method
\f0\i0  (or 
\f2\i mutator
\f0\i0 )\
\
. Similar to how it is possible to pass an array reference to a method, it is also possible to pass a variable that references an object to an array\
\
. Similar to creating an array of integers, and chars, it is possible to create an array of objects.\
  A variable that references an array of objects where each element in the array is a reference to an object}